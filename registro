<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login y Registro - Material Design 3</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.4.1/papaparse.min.js"></script>
    <style>
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        @keyframes scaleIn {
            from { transform: scale(0.8); opacity: 0; }
            to { transform: scale(1); opacity: 1; }
        }
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        .animate-fadeIn {
            animation: fadeIn 0.3s ease-out;
        }
        .animate-scaleIn {
            animation: scaleIn 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        }
        .animate-spin {
            animation: spin 1s linear infinite;
        }
    </style>
</head>
<body class="bg-gradient-to-br from-indigo-100 via-purple-50 to-pink-100 min-h-screen flex items-center justify-center p-4">
    
    <!-- Contenedor Principal -->
    <div class="w-full max-w-md">
        <!-- Tarjeta de Autenticación -->
        <div class="bg-white rounded-3xl shadow-2xl overflow-hidden border border-gray-100">
            
            <!-- Header con Gradiente -->
            <div class="relative bg-gradient-to-br from-indigo-600 via-purple-600 to-pink-600 p-8 text-white overflow-hidden">
                <div class="absolute inset-0 bg-white opacity-10"></div>
                <div class="relative z-10">
                    <div class="flex items-center justify-center mb-4">
                        <div class="w-16 h-16 bg-white bg-opacity-20 rounded-2xl flex items-center justify-center">
                            <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z"></path>
                            </svg>
                        </div>
                    </div>
                    <h1 id="headerTitle" class="text-3xl font-bold mb-2 text-center">
                        ¡Bienvenido de nuevo!
                    </h1>
                    <p id="headerSubtitle" class="text-indigo-100 text-center text-sm">
                        Ingresa tus credenciales para continuar
                    </p>
                </div>
            </div>

            <!-- Formulario -->
            <div class="p-8 space-y-4">
                
                <!-- Campo Nombre (solo en registro) -->
                <div id="nameField" class="space-y-1.5 hidden">
                    <label class="flex items-center text-sm font-semibold text-gray-700">
                        <svg class="w-4 h-4 mr-2 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                        </svg>
                        Nombre completo
                    </label>
                    <input
                        type="text"
                        id="name"
                        class="w-full px-4 py-2.5 rounded-2xl border-2 border-gray-200 bg-gray-50 transition-all duration-300 focus:outline-none focus:border-indigo-500 focus:bg-white focus:ring-4 focus:ring-indigo-100"
                        placeholder="Ej: Juan Pérez García"
                    >
                    <div id="nameError" class="hidden flex items-center gap-1 text-red-600 text-sm mt-1">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        <span></span>
                    </div>
                </div>

                <!-- Campo Fecha de Nacimiento (solo en registro) -->
                <div id="birthdateField" class="space-y-1.5 hidden">
                    <label class="flex items-center text-sm font-semibold text-gray-700">
                        <svg class="w-4 h-4 mr-2 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                        </svg>
                        Fecha de nacimiento
                    </label>
                    <input
                        type="date"
                        id="birthdate"
                        class="w-full px-4 py-2.5 rounded-2xl border-2 border-gray-200 bg-gray-50 transition-all duration-300 focus:outline-none focus:border-indigo-500 focus:bg-white focus:ring-4 focus:ring-indigo-100"
                    >
                    <div id="birthdateError" class="hidden flex items-center gap-1 text-red-600 text-sm mt-1">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        <span></span>
                    </div>
                </div>

                <!-- Campo Email -->
                <div class="space-y-1.5">
                    <label class="flex items-center text-sm font-semibold text-gray-700">
                        <svg class="w-4 h-4 mr-2 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                        </svg>
                        Correo electrónico
                    </label>
                    <input
                        type="email"
                        id="email"
                        class="w-full px-4 py-2.5 rounded-2xl border-2 border-gray-200 bg-gray-50 transition-all duration-300 focus:outline-none focus:border-indigo-500 focus:bg-white focus:ring-4 focus:ring-indigo-100"
                        placeholder="correo@ejemplo.com"
                    >
                    <div id="emailError" class="hidden flex items-center gap-1 text-red-600 text-sm mt-1">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        <span></span>
                    </div>
                </div>

                <!-- Campo Contraseña -->
                <div class="space-y-1.5">
                    <label class="flex items-center text-sm font-semibold text-gray-700">
                        <svg class="w-4 h-4 mr-2 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                        </svg>
                        Contraseña
                    </label>
                    <div class="relative">
                        <input
                            type="password"
                            id="password"
                            class="w-full px-4 py-2.5 pr-12 rounded-2xl border-2 border-gray-200 bg-gray-50 transition-all duration-300 focus:outline-none focus:border-indigo-500 focus:bg-white focus:ring-4 focus:ring-indigo-100"
                            placeholder="••••••••"
                        >
                        <button type="button" id="togglePassword" class="absolute right-4 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-700 transition-colors">
                            <svg id="eyeIcon" class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                            </svg>
                        </button>
                    </div>
                    <div id="passwordError" class="hidden flex items-center gap-1 text-red-600 text-sm mt-1">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        <span></span>
                    </div>
                    
                    <!-- Indicador de Fortaleza -->
                    <div id="passwordStrength" class="hidden mt-2">
                        <div class="flex items-center justify-between mb-1">
                            <span class="text-xs text-gray-600">Seguridad:</span>
                            <span id="strengthLabel" class="text-xs font-semibold"></span>
                        </div>
                        <div class="flex gap-1">
                            <div id="bar1" class="h-1 flex-1 rounded-full bg-gray-200"></div>
                            <div id="bar2" class="h-1 flex-1 rounded-full bg-gray-200"></div>
                            <div id="bar3" class="h-1 flex-1 rounded-full bg-gray-200"></div>
                            <div id="bar4" class="h-1 flex-1 rounded-full bg-gray-200"></div>
                            <div id="bar5" class="h-1 flex-1 rounded-full bg-gray-200"></div>
                        </div>
                    </div>
                </div>

                <!-- Campo Confirmar Contraseña (solo en registro) -->
                <div id="confirmPasswordField" class="space-y-1.5 hidden">
                    <label class="flex items-center text-sm font-semibold text-gray-700">
                        <svg class="w-4 h-4 mr-2 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                        </svg>
                        Confirmar contraseña
                    </label>
                    <div class="relative">
                        <input
                            type="password"
                            id="confirmPassword"
                            class="w-full px-4 py-2.5 pr-12 rounded-2xl border-2 border-gray-200 bg-gray-50 transition-all duration-300 focus:outline-none focus:border-indigo-500 focus:bg-white focus:ring-4 focus:ring-indigo-100"
                            placeholder="••••••••"
                        >
                        <button type="button" id="toggleConfirmPassword" class="absolute right-4 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-700 transition-colors">
                            <svg id="eyeIconConfirm" class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                            </svg>
                        </button>
                    </div>
                    <div id="confirmPasswordError" class="hidden flex items-center gap-1 text-red-600 text-sm mt-1">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        <span></span>
                    </div>
                </div>

                <!-- Olvidaste contraseña (solo en login) -->
                <div id="forgotPassword" class="flex justify-end">
                    <button type="button" class="text-sm text-indigo-600 hover:text-indigo-700 font-semibold transition-colors hover:underline">
                        ¿Olvidaste tu contraseña?
                    </button>
                </div>

                <!-- Botón Principal -->
                <button
                    id="submitBtn"
                    class="w-full bg-gradient-to-r from-indigo-600 via-purple-600 to-pink-600 text-white py-3.5 rounded-2xl font-bold shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed mt-5"
                >
                    <span id="btnText">Iniciar Sesión</span>
                    <div id="btnLoader" class="hidden flex items-center justify-center gap-2">
                        <div class="w-5 h-5 border-3 border-white border-t-transparent rounded-full animate-spin"></div>
                        <span>Procesando...</span>
                    </div>
                </button>
            </div>

            <!-- Footer -->
            <div class="px-8 pb-8 text-center border-t border-gray-100 pt-6">
                <p class="text-gray-600 text-sm">
                    <span id="switchText">¿No tienes cuenta?</span>
                    <button
                        id="switchModeBtn"
                        class="ml-2 text-indigo-600 hover:text-indigo-700 font-bold transition-colors hover:underline"
                    >
                        Regístrate aquí
                    </button>
                </p>
            </div>
        </div>

        <!-- Términos -->
        <p class="text-center text-sm text-gray-600 mt-6">
            Al continuar, aceptas nuestros
            <button class="text-indigo-600 hover:underline font-semibold">
                Términos y Condiciones
            </button>
        </p>
    </div>

    <!-- Modal de Éxito -->
    <div id="successModal" class="hidden fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center p-4 z-50 animate-fadeIn">
        <div class="bg-white rounded-3xl p-8 max-w-sm w-full text-center shadow-2xl animate-scaleIn">
            <div class="w-20 h-20 bg-gradient-to-br from-green-400 to-emerald-600 rounded-full flex items-center justify-center mx-auto mb-6">
                <svg class="w-12 h-12 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="3">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M5 13l4 4L19 7"></path>
                </svg>
            </div>
            <h3 class="text-2xl font-bold text-gray-800 mb-3">¡Éxito!</h3>
            <p id="successMessage" class="text-gray-600 text-lg">
                Has iniciado sesión correctamente
            </p>
        </div>
    </div>

    <script>
        let isLogin = true;

        // Establecer fecha máxima (hoy)
        document.getElementById('birthdate').max = new Date().toISOString().split('T')[0];

        // Elementos del DOM
        const nameField = document.getElementById('nameField');
        const birthdateField = document.getElementById('birthdateField');
        const confirmPasswordField = document.getElementById('confirmPasswordField');
        const forgotPassword = document.getElementById('forgotPassword');
        const headerTitle = document.getElementById('headerTitle');
        const headerSubtitle = document.getElementById('headerSubtitle');
        const switchText = document.getElementById('switchText');
        const switchModeBtn = document.getElementById('switchModeBtn');
        const btnText = document.getElementById('btnText');
        const btnLoader = document.getElementById('btnLoader');
        const submitBtn = document.getElementById('submitBtn');
        const successModal = document.getElementById('successModal');
        const successMessage = document.getElementById('successMessage');

        // Inputs
        const nameInput = document.getElementById('name');
        const birthdateInput = document.getElementById('birthdate');
        const emailInput = document.getElementById('email');
        const passwordInput = document.getElementById('password');
        const confirmPasswordInput = document.getElementById('confirmPassword');

        // Toggle password visibility
        document.getElementById('togglePassword').addEventListener('click', function() {
            const type = passwordInput.type === 'password' ? 'text' : 'password';
            passwordInput.type = type;
        });

        document.getElementById('toggleConfirmPassword').addEventListener('click', function() {
            const type = confirmPasswordInput.type === 'password' ? 'text' : 'password';
            confirmPasswordInput.type = type;
        });

        // Validación de fortaleza de contraseña
        passwordInput.addEventListener('input', function() {
            if (!isLogin && this.value) {
                updatePasswordStrength(this.value);
            } else {
                document.getElementById('passwordStrength').classList.add('hidden');
            }
        });

        function updatePasswordStrength(password) {
            const strengthDiv = document.getElementById('passwordStrength');
            const label = document.getElementById('strengthLabel');
            let strength = 0;

            if (password.length >= 8) strength++;
            if (password.length >= 12) strength++;
            if (/[a-z]/.test(password) && /[A-Z]/.test(password)) strength++;
            if (/\d/.test(password)) strength++;
            if (/[^a-zA-Z0-9]/.test(password)) strength++;

            const levels = [
                { label: '', color: '', textColor: '' },
                { label: 'Muy débil', color: 'bg-red-500', textColor: 'text-red-600' },
                { label: 'Débil', color: 'bg-orange-500', textColor: 'text-orange-600' },
                { label: 'Media', color: 'bg-yellow-500', textColor: 'text-yellow-600' },
                { label: 'Fuerte', color: 'bg-lime-500', textColor: 'text-lime-600' },
                { label: 'Muy fuerte', color: 'bg-green-500', textColor: 'text-green-600' }
            ];

            const level = levels[strength];
            label.textContent = level.label;
            label.className = `text-xs font-semibold ${level.textColor}`;

            for (let i = 1; i <= 5; i++) {
                const bar = document.getElementById(`bar${i}`);
                if (i <= strength) {
                    bar.className = `h-1 flex-1 rounded-full transition-all duration-300 ${level.color}`;
                } else {
                    bar.className = 'h-1 flex-1 rounded-full bg-gray-200 transition-all duration-300';
                }
            }

            strengthDiv.classList.remove('hidden');
        }

        // Cambiar entre login y registro
        switchModeBtn.addEventListener('click', function() {
            isLogin = !isLogin;
            
            if (isLogin) {
                nameField.classList.add('hidden');
                birthdateField.classList.add('hidden');
                confirmPasswordField.classList.add('hidden');
                forgotPassword.classList.remove('hidden');
                headerTitle.textContent = '¡Bienvenido de nuevo!';
                headerSubtitle.textContent = 'Ingresa tus credenciales para continuar';
                switchText.textContent = '¿No tienes cuenta?';
                switchModeBtn.textContent = 'Regístrate aquí';
                btnText.textContent = 'Iniciar Sesión';
                document.getElementById('passwordStrength').classList.add('hidden');
            } else {
                nameField.classList.remove('hidden');
                birthdateField.classList.remove('hidden');
                confirmPasswordField.classList.remove('hidden');
                forgotPassword.classList.add('hidden');
                headerTitle.textContent = 'Crear cuenta nueva';
                headerSubtitle.textContent = 'Completa el formulario para comenzar';
                switchText.textContent = '¿Ya tienes cuenta?';
                switchModeBtn.textContent = 'Inicia Sesión';
                btnText.textContent = 'Crear Cuenta';
            }

            clearForm();
        });

        // Calcular edad
        function calculateAge(birthdate) {
            const today = new Date();
            const birth = new Date(birthdate);
            let age = today.getFullYear() - birth.getFullYear();
            const m = today.getMonth() - birth.getMonth();
            if (m < 0 || (m === 0 && today.getDate() < birth.getDate())) {
                age--;
            }
            return age;
        }

        // Validación del formulario
        function validateForm() {
            let isValid = true;

            if (!isLogin) {
                const name = nameInput.value.trim();
                if (!name) {
                    showError('nameError', 'El nombre es requerido');
                    isValid = false;
                } else if (name.length < 3) {
                    showError('nameError', 'Mínimo 3 caracteres');
                    isValid = false;
                } else {
                    hideError('nameError');
                }

                const birthdate = birthdateInput.value;
                if (!birthdate) {
                    showError('birthdateError', 'La fecha de nacimiento es requerida');
                    isValid = false;
                } else {
                    const age = calculateAge(birthdate);
                    if (age < 18) {
                        showError('birthdateError', 'Debes tener al menos 18 años');
                        isValid = false;
                    } else if (age > 100) {
                        showError('birthdateError', 'Fecha de nacimiento inválida');
                        isValid = false;
                    } else {
                        hideError('birthdateError');
                    }
                }
            }

            const email = emailInput.value.trim();
            if (!email) {
                showError('emailError', 'El email es requerido');
                isValid = false;
            } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
                showError('emailError', 'Email inválido');
                isValid = false;
            } else {
                hideError('emailError');
            }

            const password = passwordInput.value;
            if (!password) {
                showError('passwordError', 'La contraseña es requerida');
                isValid = false;
            } else if (password.length < 8) {
                showError('passwordError', 'Mínimo 8 caracteres');
                isValid = false;
            } else if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*\d)/.test(password)) {
                showError('passwordError', 'Debe incluir mayúscula, minúscula y número');
                isValid = false;
            } else {
                hideError('passwordError');
            }

            if (!isLogin) {
                const confirmPassword = confirmPasswordInput.value;
                if (!confirmPassword) {
                    showError('confirmPasswordError', 'Confirma tu contraseña');
                    isValid = false;
                } else if (confirmPassword !== password) {
                    showError('confirmPasswordError', 'Las contraseñas no coinciden');
                    isValid = false;
                } else {
                    hideError('confirmPasswordError');
                }
            }

            return isValid;
        }

        function showError(errorId, message) {
            const errorDiv = document.getElementById(errorId);
            errorDiv.classList.remove('hidden');
            errorDiv.querySelector('span').textContent = message;
            
            const inputId = errorId.replace('Error', '');
            const input = document.getElementById(inputId);
            input.classList.add('border-red-400', 'bg-red-50', 'focus:border-red-500', 'focus:ring-red-100');
            input.classList.remove('border-gray-200', 'bg-gray-50', 'focus:border-indigo-500', 'focus:ring-indigo-100');
        }

        function hideError(errorId) {
            const errorDiv = document.getElementById(errorId);
            errorDiv.classList.add('hidden');
            
            const inputId = errorId.replace('Error', '');
            const input = document.getElementById(inputId);
            input.classList.remove('border-red-400', 'bg-red-50', 'focus:border-red-500', 'focus:ring-red-100');
            input.classList.add('border-gray-200', 'bg-gray-50', 'focus:border-indigo-500', 'focus:ring-indigo-100');
        }

        function clearForm() {
            nameInput.value = '';
            birthdateInput.value = '';
            emailInput.value = '';
            passwordInput.value = '';
            confirmPasswordInput.value = '';
            
            hideError('nameError');
            hideError('birthdateError');
            hideError('emailError');
            hideError('passwordError');
            hideError('confirmPasswordError');
        }

        // Guardar usuario en el servidor
        async function saveUser(userData) {
            try {
                const response = await fetch('http://localhost:3000/api/registrar', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(userData)
                });
                
                const result = await response.json();
                
                if (result.success) {
                    console.log('✅ Usuario guardado con ID:', result.id);
                    return { success: true, id: result.id };
                } else {
                    console.error('❌ Error:', result.message);
                    return { success: false, message: result.message };
                }
            } catch (error) {
                console.error('❌ Error al guardar usuario:', error);
                return { success: false, message: 'Error de conexión con el servidor' };
            }
        }

        // Login de usuario
        async function loginUser(email, password) {
            try {
                const response = await fetch('http://localhost:3000/api/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email, password })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    console.log('✅ Login exitoso:', result.usuario.nombre);
                    return { success: true, usuario: result.usuario };
                } else {
                    console.error('❌ Error:', result.message);
                    return { success: false, message: result.message };
                }
            } catch (error) {
                console.error('❌ Error al hacer login:', error);
                return { success: false, message: 'Error de conexión con el servidor' };
            }
        }

        // Submit
        submitBtn.addEventListener('click', async function() {
            if (validateForm()) {
                btnText.classList.add('hidden');
                btnLoader.classList.remove('hidden');
                submitBtn.disabled = true;

                if (!isLogin) {
                    // REGISTRO
                    const userData = {
                        nombre: nameInput.value.trim(),
                        fecha_nacimiento: birthdateInput.value,
                        edad: calculateAge(birthdateInput.value),
                        email: emailInput.value.trim()
                    };
                    
                    const result = await saveUser(userData);
                    
                    if (result.success) {
                        successMessage.textContent = `¡Cuenta creada exitosamente! Tu ID es: ${result.id}`;
                    } else {
                        successMessage.textContent = result.message || 'Error al registrar usuario';
                    }
                } else {
                    // LOGIN
                    const email = emailInput.value.trim();
                    const password = passwordInput.value;
                    
                    const result = await loginUser(email, password);
                    
                    if (result.success) {
                        successMessage.textContent = `¡Bienvenido ${result.usuario.nombre}!`;
                    } else {
                        successMessage.textContent = result.message || 'Error al iniciar sesión';
                    }
                }

                btnText.classList.remove('hidden');
                btnLoader.classList.add('hidden');
                submitBtn.disabled = false;

                successModal.classList.remove('hidden');

                setTimeout(() => {
                    successModal.classList.add('hidden');
                    if (!isLogin) {
                        clearForm();
                    }
                }, 2500);
            }
        });

        // Validación en tiempo real al salir del campo
        [nameInput, birthdateInput, emailInput, passwordInput, confirmPasswordInput].forEach(input => {
            if (input) {
                input.addEventListener('blur', function() {
                    if (this.value) {
                        validateForm();
                    }
                });
            }
        });
    </script>
</body>
</html>
